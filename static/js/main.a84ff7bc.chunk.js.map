{"version":3,"sources":["Loading.js","MovieCard.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","MovieCard","title","genres","img","children","src","slice","map","el","idx","Truncate","lines","ellipsis","App","useState","movies","setMovies","useEffect","getMovies","a","fetch","mode","then","res","json","_movies","console","log","data","length","title_long","medium_cover_image","summary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAIe,SAASA,IACpB,OACA,sBAAKC,UAAU,WAAf,UACI,wBACA,wBACA,wBACA,2B,iBCLO,SAASC,EAAT,GAKX,IAJAC,EAID,EAJCA,MACAC,EAGD,EAHCA,OACAC,EAED,EAFCA,IACAC,EACD,EADCA,SAWA,OACI,sBAAKL,UAAU,qBAAf,UACI,qBAAKM,IAAKF,IACV,qBAAKJ,UAAU,QAAf,SACI,6BAAKE,MAET,qBAAKF,UAAU,SAAf,SAbGG,EAAOI,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAIC,GAAL,OAC1B,+BACKD,GADMC,QAeX,qBAAKV,UAAU,UAAf,SACI,cAACW,EAAA,EAAD,CAAUC,MAAO,EAAGC,SAAU,uCAA9B,SACKR,S,MCmBNS,MA5Cf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAENC,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,MACC,IAEH,IAOMA,EAAS,uCAAG,4BAAAC,EAAA,sEANTC,MAAM,gEAAiE,CAC5EC,KAAM,SAEPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAGD,OACVC,EADU,OAEhBC,QAAQC,IAAIF,GACZT,EAAUS,EAAQG,KAAKb,QAHP,2CAAH,qDAoBf,OACE,qBAAKhB,UAAU,MAAf,SACE,qBAAKA,UAAU,UAAf,SACGgB,EAAOc,OAAS,EAhBdd,EAAOR,KAAI,SAACC,EAAIC,GAAL,OAChB,cAAC,EAAD,CAEER,MAAOO,EAAGsB,WACV3B,IAAKK,EAAGuB,mBACR7B,OAAQM,EAAGN,OAJb,SAMGM,EAAGwB,SALCvB,MAciC,cAAC,EAAD,SChC/BwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a84ff7bc.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Loading.css'\n\nexport default function Loading() {\n    return (\n    <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n    )\n}","import React from 'react'\nimport Truncate from 'react-truncate'\n\nimport './MovieCard.css'\n\nexport default function MovieCard({\n    title,\n    genres,\n    img,\n    children\n}) {\n\n    const renderGenres = () => {\n        return genres.slice(0, 5).map((el, idx) => \n            <span key={idx}>\n                {el}\n            </span>\n        )\n    }\n\n    return (\n        <div className='movie_card-wrapper'>\n            <img src={img}/>\n            <div className='title'>\n                <h1>{title}</h1>\n            </div>\n            <div className='genres'>\n                {renderGenres()}\n            </div>\n            <div className='summary'>\n                <Truncate lines={2} ellipsis={<span>...</span>}>\n                    {children}\n                </Truncate>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport MovieCard from './MovieCard';\n\nimport './App.css'\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovies()\n  }, [])\n\n  const callApi = () => {\n    return fetch(\"https://yts.mx/api/v2/list_movies.json?sort_by=download_count\", {\n      mode: 'cors'\n    })\n    .then(res => res.json())\n  };\n\n  const getMovies = async () => {\n    const _movies = await callApi();\n    console.log(_movies)\n    setMovies(_movies.data.movies);\n  };\n\n  const renderMovies = () => {\n    return movies.map((el, idx) => \n      <MovieCard\n        key={idx}\n        title={el.title_long}\n        img={el.medium_cover_image}\n        genres={el.genres}\n      >\n        {el.summary}\n      </MovieCard>\n    )\n  } \n\n\n  return (\n    <div className=\"App\">\n      <div className='wrapper'>\n        {movies.length > 0 ? renderMovies() : <Loading />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}